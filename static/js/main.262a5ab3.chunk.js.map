{"version":3,"sources":["hoc/withAuthRedirect.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/users/user.png","assets/preloaders/832.svg","api/api.js","components/nav/nav.module.css","serviceWorker.js","components/nav/nav.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/News/News.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validatirs/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","activeClassName","activeLink","Settings","Music","News","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","bind","page","totalCount","Header","header","alt","loginBlock","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUsersProfile","newPost","postId"],"mappings":"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","file":"static/js/main.262a5ab3.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is you learning?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'How is you learning?'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: 'SEND_MESSAGE', newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2CjJp\"};","module.exports = __webpack_public_path__ + \"static/media/user.960d9c1c.png\";","module.exports = __webpack_public_path__ + \"static/media/832.ece94ced.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"64054d44-c448-4739-90f6-f03b412a7000\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__V4NBW\",\"item\":\"nav_item__3FQyV\",\"activeLink\":\"nav_activeLink__3icBi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport s from './nav.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/News\" activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/Music\" activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/Settings\" activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\n// import s from \"./Dialogs.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings it is all right!\r\n        </div>\r\n    )\r\n};\r\nexport default Settings;\r\n","import React from \"react\";\r\n// import s from \"./Dialogs.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Jay maty ego - Z\r\n        </div>\r\n    )\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\n// import s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            <div>Hello, Borisovna to has a second place of the Cup of Ukraine. Congratulation!</div>\r\n            {/*<img src=\"https://scontent.fifo4-1.fna.fbcdn.net/v/t1.0-9/49192731_530114814153189_8113612441016860672_o.jpg?_nc_cat=109&_nc_sid=cdbe9c&_nc_ohc=OR81ZCLBjTkAX8wqV6v&_nc_ht=scontent.fifo4-1.fna&oh=545959991f3dd3db19e34b3cd6d7cf23&oe=5F82F89C\" alt=\"foto\" />*/}\r\n        </div>\r\n    )\r\n};\r\nexport default News;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETHING = 'TOGGLE_IS_FETHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage,})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount,})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/ portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber - 1) }}> PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map( (p) => {\r\n                return <span className={ cn ({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber + 1 ) }}>NEXT</button>}\r\n\r\n        </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/users/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n            <span>\r\n              <div>\r\n                  <NavLink to={'/Profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                     className={styles.userPhoto}/>\r\n                  </NavLink>\r\n              </div>\r\n              <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n              </div>\r\n            </span>\r\n        <span>\r\n              <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n              </span>\r\n              <span>\r\n                <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n              </span>\r\n            </span>\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map((u) => <User user={u}\r\n                                       key={u.id}\r\n                                       followingInProgress={props.followingInProgress}\r\n                                       unfollow={props.unfollow}\r\n                                       follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress, requestUsers,\r\n} from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.freelogodesign.org/Content/img/logo-samples/flooop.png\" alt=\"logo\" />\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages [0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\nisAuth: state.auth.isAuth,\r\nlogin: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validatirs/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all ([promise])\r\n        .then (() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Component} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/nav/nav\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/dialogs'\r\n                           render={ withSuspense(DialogsContainer) }/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={ withSuspense(ProfileContainer) }/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/Settings' render={() => <Settings/>}/>\r\n                    <Route path='/Music' render={() => <Music/>}/>\r\n                    <Route path='/News' render={() => <News/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validatirs/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from \"react\";\r\nimport preloader from \"../../../assets/preloaders/832.svg\";\r\n\r\nlet Preloader = (props) => {\r\nreturn <div><img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2LNuT\",\"error\":\"FormsControls_error__2T6Sh\",\"formSummaryError\":\"FormsControls_formSummaryError__3l9Wk\"};","export const required = value => {\r\n    if (value) return undefined\r\n\r\n        return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__37-W_\",\"pageNumber\":\"Paginator_pageNumber__3SLy0\",\"selectedPage\":\"Paginator_selectedPage__3P9yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1aNyN\",\"loginBlock\":\"Header_loginBlock__250MS\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It?\\'s my first massage', likesCount: 11},\r\n        {id: 3, message: 'Bla Bla', likesCount: 11},\r\n        {id: 4, message: 'Da da', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state, posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}